{
  "version": 3,
  "sources": ["../../aframe-extras/src/primitives/a-ocean.js"],
  "sourcesContent": ["/**\n * Flat-shaded ocean primitive.\n *\n * Based on a Codrops tutorial:\n * http://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-ocean', {\n  defaultComponents: {\n    ocean: {},\n    rotation: {x: -90, y: 0, z: 0}\n  },\n  mappings: {\n    width: 'ocean.width',\n    depth: 'ocean.depth',\n    density: 'ocean.density',\n    amplitude: 'ocean.amplitude',\n    amplitudeVariance: 'ocean.amplitudeVariance',\n    speed: 'ocean.speed',\n    speedVariance: 'ocean.speedVariance',\n    color: 'ocean.color',\n    opacity: 'ocean.opacity'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('ocean', {\n  schema: {\n    // Dimensions of the ocean area.\n    width: {default: 10, min: 0},\n    depth: {default: 10, min: 0},\n\n    // Density of waves.\n    density: {default: 10},\n\n    // Wave amplitude and variance.\n    amplitude: {default: 0.1},\n    amplitudeVariance: {default: 0.3},\n\n    // Wave speed and variance.\n    speed: {default: 1},\n    speedVariance: {default: 2},\n\n    // Material.\n    color: {default: '#7AD2F7', type: 'color'},\n    opacity: {default: 0.8}\n  },\n\n  /**\n   * Use play() instead of init(), because component mappings – unavailable as dependencies – are\n   * not guaranteed to have parsed when this component is initialized.\n   */\n  play: function () {\n    const el = this.el;\n    const data = this.data;\n    let material = el.components.material;\n\n    const geometry = new THREE.PlaneGeometry(data.width, data.depth, data.density, data.density);\n    this.waves = [];\n    const posAttribute = geometry.getAttribute('position');\n    for (let i = 0; i < posAttribute.count; i++) {\n      this.waves.push({\n        z: posAttribute.getZ(i),\n        ang: Math.random() * Math.PI * 2,\n        amp: data.amplitude + Math.random() * data.amplitudeVariance,\n        speed: (data.speed + Math.random() * data.speedVariance) / 1000 // radians / frame\n      });\n    }\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial({\n        color: data.color,\n        transparent: data.opacity < 1,\n        opacity: data.opacity,\n        flatShading: true,\n      });\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    el.setObject3D('mesh', this.mesh);\n  },\n\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  },\n\n  tick: function (t, dt) {\n    if (!dt) return;\n\n    const posAttribute = this.mesh.geometry.getAttribute('position');\n    for (let i = 0; i < posAttribute.count; i++){\n      const vprops = this.waves[i];\n      const value = vprops.z + Math.sin(vprops.ang) * vprops.amp;\n      posAttribute.setZ(i, value);\n      vprops.ang += vprops.speed * dt;\n    }\n    posAttribute.needsUpdate = true;\n  }\n});\n"],
  "mappings": ";;;;;AAAA;AAAA;AAMA,WAAO,QAAQ,YAAY,OAAO,kBAAkB,WAAW;AAAA,MAC7D,mBAAmB;AAAA,QACjB,OAAO,CAAC;AAAA,QACR,UAAU,EAAC,GAAG,KAAK,GAAG,GAAG,GAAG,EAAC;AAAA,MAC/B;AAAA,MACA,UAAU;AAAA,QACR,OAAO;AAAA,QACP,OAAO;AAAA,QACP,SAAS;AAAA,QACT,WAAW;AAAA,QACX,mBAAmB;AAAA,QACnB,OAAO;AAAA,QACP,eAAe;AAAA,QACf,OAAO;AAAA,QACP,SAAS;AAAA,MACX;AAAA,IACF,CAAC;AAED,WAAO,QAAQ,YAAY,OAAO,kBAAkB,SAAS;AAAA,MAC3D,QAAQ;AAAA;AAAA,QAEN,OAAO,EAAC,SAAS,IAAI,KAAK,EAAC;AAAA,QAC3B,OAAO,EAAC,SAAS,IAAI,KAAK,EAAC;AAAA;AAAA,QAG3B,SAAS,EAAC,SAAS,GAAE;AAAA;AAAA,QAGrB,WAAW,EAAC,SAAS,IAAG;AAAA,QACxB,mBAAmB,EAAC,SAAS,IAAG;AAAA;AAAA,QAGhC,OAAO,EAAC,SAAS,EAAC;AAAA,QAClB,eAAe,EAAC,SAAS,EAAC;AAAA;AAAA,QAG1B,OAAO,EAAC,SAAS,WAAW,MAAM,QAAO;AAAA,QACzC,SAAS,EAAC,SAAS,IAAG;AAAA,MACxB;AAAA;AAAA;AAAA;AAAA;AAAA,MAMA,MAAM,WAAY;AAChB,cAAM,KAAK,KAAK;AAChB,cAAM,OAAO,KAAK;AAClB,YAAI,WAAW,GAAG,WAAW;AAE7B,cAAM,WAAW,IAAI,MAAM,cAAc,KAAK,OAAO,KAAK,OAAO,KAAK,SAAS,KAAK,OAAO;AAC3F,aAAK,QAAQ,CAAC;AACd,cAAM,eAAe,SAAS,aAAa,UAAU;AACrD,iBAAS,IAAI,GAAG,IAAI,aAAa,OAAO,KAAK;AAC3C,eAAK,MAAM,KAAK;AAAA,YACd,GAAG,aAAa,KAAK,CAAC;AAAA,YACtB,KAAK,KAAK,OAAO,IAAI,KAAK,KAAK;AAAA,YAC/B,KAAK,KAAK,YAAY,KAAK,OAAO,IAAI,KAAK;AAAA,YAC3C,QAAQ,KAAK,QAAQ,KAAK,OAAO,IAAI,KAAK,iBAAiB;AAAA;AAAA,UAC7D,CAAC;AAAA,QACH;AAEA,YAAI,CAAC,UAAU;AACb,qBAAW,CAAC;AACZ,mBAAS,WAAW,IAAI,MAAM,kBAAkB;AAAA,YAC9C,OAAO,KAAK;AAAA,YACZ,aAAa,KAAK,UAAU;AAAA,YAC5B,SAAS,KAAK;AAAA,YACd,aAAa;AAAA,UACf,CAAC;AAAA,QACH;AAEA,aAAK,OAAO,IAAI,MAAM,KAAK,UAAU,SAAS,QAAQ;AACtD,WAAG,YAAY,QAAQ,KAAK,IAAI;AAAA,MAClC;AAAA,MAEA,QAAQ,WAAY;AAClB,aAAK,GAAG,eAAe,MAAM;AAAA,MAC/B;AAAA,MAEA,MAAM,SAAU,GAAG,IAAI;AACrB,YAAI,CAAC,GAAI;AAET,cAAM,eAAe,KAAK,KAAK,SAAS,aAAa,UAAU;AAC/D,iBAAS,IAAI,GAAG,IAAI,aAAa,OAAO,KAAI;AAC1C,gBAAM,SAAS,KAAK,MAAM,CAAC;AAC3B,gBAAM,QAAQ,OAAO,IAAI,KAAK,IAAI,OAAO,GAAG,IAAI,OAAO;AACvD,uBAAa,KAAK,GAAG,KAAK;AAC1B,iBAAO,OAAO,OAAO,QAAQ;AAAA,QAC/B;AACA,qBAAa,cAAc;AAAA,MAC7B;AAAA,IACF,CAAC;AAAA;AAAA;",
  "names": []
}
